generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Learner {
    id       String  @id @unique @db.VarChar(20)
    nickname String  @db.VarChar(15)
    password String
    email    String?
    phone    String? @db.VarChar(11)
    avatar   String?
    intro    String? @db.VarChar(30)

    Info  Info[]
    Point Point[]
    Chunk Chunk[]
}

model Info {
    id       Int     @id @default(autoincrement())
    content  String  @db.Text
    isRefine Boolean @default(false)

    isDel      Boolean  @default(false)
    author     Learner? @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    authorId   String   @db.VarChar(20)
    createTime DateTime @default(now())
    updateTime DateTime @updatedAt
}

model Point {
    id       Int     @id @default(autoincrement())
    name     String  @db.VarChar(50)
    content  String  @db.Text
    isRefine Boolean @default(false)

    isDel      Boolean  @default(false)
    author     Learner? @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    authorId   String   @db.VarChar(20)
    createTime DateTime @default(now())
    updateTime DateTime @updatedAt

    ChunkContent ChunkContent[]
}

model Chunk {
    id       Int     @id @default(autoincrement())
    name     String  @db.VarChar(50)
    preface  String  @db.Text
    endnote  String  @db.Text
    isRefine Boolean @default(false)

    ChunkContent ChunkContent[]

    isDel      Boolean  @default(false)
    author     Learner? @relation(fields: [authorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    authorId   String   @db.VarChar(20)
    createTime DateTime @default(now())
    updateTime DateTime @updatedAt
}

model ChunkContent {
    chunk   Chunk? @relation(fields: [chunkId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    chunkId Int

    order Int

    point   Point? @relation(fields: [pointId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    pointId Int

    @@id([chunkId, order])
}

model Relate {
    targetId   Int
    targetType String
    relateId   Int
    relateType String

    createTime DateTime @default(now())

    @@id([targetId, targetType, relateId, relateType])
}
